// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Usuario {
  usuarioId       Int  @default(autoincrement()) @id
  nombreCompleto  String  
  dni             String
  contrase√±a      String
  sexo            String
  disponible      Boolean @default(true)
  estadoCivil     String
  fechaNacimiento DateTime
  facturas Factura[]
}
model Factura{
  facturaId Int @default(autoincrement()) @id
  disponible Boolean @default(true)
  fecha DateTime @default(now())
  total Float
  nombreFantasia String 
  fechaFundacion String
  usuario Usuario @relation(fields: [usID], references: [usuarioId])
  usID Int
  detallesFactura DetalleFactura[]
}
model DetalleFactura {
  detalleFacturaId Int @default(autoincrement()) @id
  disponible Boolean @default(true)
  subtotal Float
  cantidad Int
  factura Factura @relation(fields: [factID], references: [facturaId])
  factID Int
  producto Producto @relation(fields: [prodId], references: [productoId])
  prodId Int
}
model Producto {
  productoId Int @default(autoincrement()) @id
  disponible Boolean @default(true)
  nombre String
  precioUnitario Float
  descripcion String
  stock Int
  detallesFacturas   DetalleFactura[]
}
